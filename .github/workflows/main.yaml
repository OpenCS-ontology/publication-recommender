name: Create and publish a Docker image

on:
  push:
    branches: ['main']
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  container-test:
    runs-on: ubuntu-latest
services:
      etcd:
        image: quay.io/coreos/etcd:v3.5.5
        env:
          ETCD_AUTO_COMPACTION_MODE: revision
          ETCD_AUTO_COMPACTION_RETENTION: 1000
          ETCD_QUOTA_BACKEND_BYTES: 4294967296
          ETCD_SNAPSHOT_COUNT: 50000
        ports:
          - 2379:2379
        options: --name milvus-etcd --health-cmd "etcdctl endpoint health" --health-interval 30s --health-timeout 20s --health-retries 3
      minio:
        image: minio/minio:RELEASE.2023-03-20T20-16-18Z
        env:
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin
        ports:
          - 9000:9000
          - 9001:9001
        options: --name milvus-minio --health-cmd "curl -f http://localhost:9000/minio/health/live" --health-interval 30s --health-timeout 20s --health-retries 3
      standalone:
        image: milvusdb/milvus:v2.3.3
        command: ["milvus", "run", "standalone"]
        security_opt:
          - seccomp:unconfined
        environment:
          ETCD_ENDPOINTS: etcd:2379
          MINIO_ADDRESS: minio:9000
        volumes:
          - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
          interval: 30s
          start_period: 90s
          timeout: 20s
          retries: 3
        ports:
          - "19530:19530"
          - "9091:9091"
        depends_on:
          - "etcd"
          - "minio"
          
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        uses: docker/compose-cli@v2
        with:
          compose-file: docker-compose.yml

      - name: Build and Run Containers
        run: docker compose up -d

      - name: Wait for Services to Start
        run: sleep 60
      
      - name: Run recommender container
        run: |
          docker build -t recommender_image .
          docker run -d -t --name recommender-container -p 8060:8060 recommender_image

      - name: Check if container runs properly
        run: |
          docker exec recommender-container bash /home/container_test/test_script.sh

      - name: Stop and remove containers
        run: |
          docker stop milvus-etcd milvus-minio recommender-container milvus-standalone
          docker rm milvus-etcd milvus-minio recommender-container milvus-standalone

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: container-test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
