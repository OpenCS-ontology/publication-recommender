name: Create and publish a Docker image

on:
  push:
    branches: ['main']
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  container-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Docker Network
        run: |
          docker network create milvus

      - name: Run etcd container
        run: |
          docker pull quay.io/coreos/etcd:v3.5.5
          docker run --network=milvus -d \
            --name milvus-etcd \
            -p 2379:2379 \
            -v ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd \
            --health-cmd="etcdctl endpoint health" \
            --health-interval=30s \
            --health-timeout=20s \
            --health-retries=3 \
            quay.io/coreos/etcd:v3.5.5 \
            etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd


      - name: Run minio container
        run: |
          docker pull quay.io/minio/minio
          docker run --network=milvus -d \
            --name milvus-minio \
            -p 9001:9001 \
            -p 9000:9000 \
            -e MINIO_ACCESS_KEY=minioadmin \
            -e MINIO_SECRET_KEY=minioadmin \
            -v ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data \
            --health-cmd="curl -f http://localhost:9000/minio/health/live" \
            --health-interval=30s \
            --health-timeout=20s \
            --health-retries=3 \
            minio/minio:RELEASE.2023-03-20T20-16-18Z \
            server /minio_data --console-address ":9001"


      - name: Run milvus container
        run: |
          docker pull milvusdb/milvus:v2.3.3
          docker run --network=milvus -d \
            --name milvus-standalone \
            -p 19530:19530 \
            -p 9091:9091 \
            --security-opt seccomp=unconfined \
            -e ETCD_ENDPOINTS=etcd:2379 \
            -e MINIO_ADDRESS=minio:9000 \
            -v ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus \
            --health-cmd="curl -f http://localhost:9091/healthz" \
            --health-interval=30s \
            --health-start-period=90s \
            --health-timeout=20s \
            --health-retries=3 \
            milvusdb/milvus:v2.3.3 \
            milvus run standalone

          docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' milvus-standalone
      
      - name: Run recommender container
        run: |
          docker build -t recommender_image .
          docker run --network=milvus -d -t --name recommender-container -p 8060:8060 recommender_image

      - name: Wait for containers to be healthy
        run: |
          sleep 20

      - name: Check if container runs properly
        run: |
          docker exec recommender-container bash /home/container_test/test_script.sh

      - name: Stop and remove containers
        run: |
          docker stop milvus-etcd milvus-minio recommender-container milvus-standalone
          docker rm milvus-etcd milvus-minio recommender-container milvus-standalone

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: container-test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
